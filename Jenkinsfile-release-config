pipeline{
	agent any
	
	stages{
		stage('Confirm configurations'){
			steps{
				script{
          				def userInput = input(
          				id: 'userInput', message: "Has the Config file credentials been updated for this release?",
          				parameters: [
                      					[$class: 'TextParameterDefinition', defaultValue: '', description: '', name: 'response']
                      				])
					
          				if (!userInput.toLowerCase().startsWith("y")) {
						error("Please update the config file for this release and upload it in Jenkins as a secret file credential. Please have the credential scoped to this folder.")
					}
				}
				script{
				       	def userInput = input(
          				id: 'userInput', message: "Have the release-specific Jenkins environmental variables been updated for this release?",
          				parameters: [
                      					[$class: 'TextParameterDefinition', defaultValue: '', description: '', name: 'response']
                      				])
					
					if (!userInput.toLowerCase().startsWith("y")) {
						error("Please update release-specific environmental variables found at 'Jenkins -> Manage Jenkins -> Configure System -> Global Properties'.")
					}
				}
				dir('scripts'){
					script{
						def userReleaseNumber = input(
						id: 'userInput', message: "Enter release version number.",
						parameters: [
										[$class: 'TextParameterDefinition', defaultValue: '', description: '', name: 'response']
									])
						withCredentials([file(credentialsId: 'Config', variable: 'FILE')]){
							sh "./confirmJenkinsConfigurations.sh $FILE ${env.RELEASE_NUMBER} ${env.PREV_RELEASE_NUMBER} $userReleaseNumber"
						}
					}
				}
			}
		}
	}
}
